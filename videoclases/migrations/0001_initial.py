# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2020-08-11 02:22
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import os

from django.core import serializers

fixture_dir = os.path.abspath(os.path.join(os.path.dirname(__file__), '../fixtures'))
fixture_filename = 'initial_data.json'


def load_fixture(apps, schema_editor):
    fixture_file = os.path.join(fixture_dir, fixture_filename)

    fixture = open(fixture_file, 'rb')
    objects = serializers.deserialize('json', fixture, ignorenonexistent=True)
    for obj in objects:
        obj.save()
    fixture.close()


def unload_fixture(apps, schema_editor):
    "Brutally deleting all entries for this model..."

    MyModel = apps.get_model("yourapp", "ModelName")
    MyModel.objects.all().delete()


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Alternative',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Alternativa',
            },
        ),
        migrations.CreateModel(
            name='BooleanParameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=256)),
                ('value', models.BooleanField()),
            ],
            options={
                'verbose_name': 'Mis Parámetros',
                'verbose_name_plural': 'Mis Parámetros',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('year', models.IntegerField(default=2020)),
            ],
            options={
                'verbose_name': 'Curso',
                'ordering': ['-year', '-id'],
            },
        ),
        migrations.CreateModel(
            name='CriteriaByTeacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'verbose_name': 'Criterio de evaluación',
                'verbose_name_plural': 'Criterios de evaluación',
            },
        ),
        migrations.CreateModel(
            name='Criterion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Criterios',
                'verbose_name_plural': 'Criterios',
            },
        ),
        migrations.CreateModel(
            name='CriterionResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DecimalField(decimal_places=3, max_digits=10)),
                ('criterion',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videoclases.Criterion')),
            ],
            options={
                'verbose_name': 'Respuesta de Criterios',
                'verbose_name_plural': 'Respuestas Criterios',
            },
        ),
        migrations.CreateModel(
            name='FinalScores',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_score', models.FloatField(blank=True, default=0, null=True)),
                ('teacher_score', models.FloatField(default=0)),
            ],
            options={
                'verbose_name': 'Nota final',
                'verbose_name_plural': 'Notas finales',
            },
        ),
        migrations.CreateModel(
            name='GroupOfStudents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Grupo de estudiantes',
                'verbose_name_plural': 'Grupos de estudiantes',
            },
        ),
        migrations.CreateModel(
            name='Homework',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=80)),
                ('description', models.TextField(validators=[django.core.validators.MaxLengthValidator(400)])),
                ('video', models.CharField(blank=True, max_length=100, null=True)),
                ('date_upload', models.DateField()),
                ('date_evaluation', models.DateField()),
                ('revision', models.IntegerField(default=3)),
                ('course',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_homework',
                                   to='videoclases.Course')),
                ('criteria', models.ManyToManyField(blank=True, to='videoclases.CriteriaByTeacher')),
                ('homework_to_evaluate',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                   to='videoclases.Homework')),
            ],
            options={
                'verbose_name': 'Tarea',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='PedagogicalQuestions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('delta_time', models.DurationField()),
                ('description', models.TextField(blank=True, null=True)),
                ('homework',
                 models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='videoclases.Homework')),
            ],
            options={
                'verbose_name': 'Pregunta Pedagógica',
                'verbose_name_plural': 'Preguntas Pedagógicas',
            },
        ),
        migrations.CreateModel(
            name='PedagogicalQuestionsAnswers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.IntegerField(
                    choices=[(1, 'Antes del envio de la tarea'), (2, 'Antes del la evaluación de videos'),
                             (3, 'Después de la evaluación')])),
            ],
            options={
                'verbose_name': 'Respuesta a Preguntas Pedagógicas',
                'verbose_name_plural': 'Respuestas a Preguntas Pedagógicas',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(blank=True, max_length=255, null=True)),
                ('alternatives',
                 models.ManyToManyField(related_name='question_alternatives', to='videoclases.Alternative')),
                ('correct', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                              related_name='question_correct', to='videoclases.Alternative')),
            ],
            options={
                'verbose_name': 'Pregunta',
            },
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answer_question',
                                   to='videoclases.Alternative')),
                ('question',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='response_question',
                                   to='videoclases.Question')),
            ],
            options={
                'verbose_name': 'Respuesta',
            },
        ),
        migrations.CreateModel(
            name='Scale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Escala de Evaluación',
                'verbose_name_plural': 'Escalas de Evaluación',
            },
        ),
        migrations.CreateModel(
            name='ScaleValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('value', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
            options={
                'verbose_name': 'Valores de Escala',
                'verbose_name_plural': 'Valores de Escalas',
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
            options={
                'verbose_name': 'Colegio',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changed_password', models.BooleanField(default=False)),
                ('courses', models.ManyToManyField(related_name='students', to='videoclases.Course')),
                (
                'user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Estudiante',
            },
        ),
        migrations.CreateModel(
            name='StudentEvaluations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(default=0)),
                ('format', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True)),
                ('copyright', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True)),
                ('theme', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True)),
                ('pedagogical', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True)),
                ('rythm', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True)),
                ('originality', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True)),
                ('comments', models.TextField(blank=True, default='', null=True)),
                ('created', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videoclases.Student')),
                ('criteria', models.ManyToManyField(blank=True, to='videoclases.CriterionResponse')),
            ],
            options={
                'verbose_name': 'Evaluación de estudiante',
                'verbose_name_plural': 'Evaluaciones de estudiantes',
            },
        ),
        migrations.CreateModel(
            name='StudentResponses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(blank=True, max_length=100, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videoclases.Student')),
            ],
            options={
                'verbose_name': 'Respuesta de estudiante',
                'verbose_name_plural': 'Respuestas de estudiantes',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changed_password', models.BooleanField(default=False)),
                ('courses', models.ManyToManyField(blank=True, to='videoclases.Course')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videoclases.School')),
                (
                'user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profesor',
                'verbose_name_plural': 'Profesores',
            },
        ),
        migrations.CreateModel(
            name='VideoClase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.CharField(blank=True, max_length=100, null=True)),
                ('question', models.CharField(blank=True, max_length=100, null=True)),
                ('correct_alternative', models.CharField(blank=True, max_length=100, null=True)),
                ('alternative_2', models.CharField(blank=True, max_length=100, null=True)),
                ('alternative_3', models.CharField(blank=True, max_length=100, null=True)),
                ('upload_students', models.DateTimeField(blank=True, null=True)),
                ('group', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                               to='videoclases.GroupOfStudents')),
                ('homework', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                               to='videoclases.Homework')),
            ],
        ),
        migrations.AddField(
            model_name='studentresponses',
            name='videoclase',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers',
                                    to='videoclases.VideoClase'),
        ),
        migrations.AddField(
            model_name='studentevaluations',
            name='videoclase',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations',
                                    to='videoclases.VideoClase'),
        ),
        migrations.AddField(
            model_name='scale',
            name='values',
            field=models.ManyToManyField(blank=True, to='videoclases.ScaleValue'),
        ),
        migrations.AddField(
            model_name='pedagogicalquestionsanswers',
            name='response',
            field=models.ManyToManyField(to='videoclases.Response'),
        ),
        migrations.AddField(
            model_name='pedagogicalquestionsanswers',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videoclases.Student'),
        ),
        migrations.AddField(
            model_name='pedagogicalquestionsanswers',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videoclases.PedagogicalQuestions'),
        ),
        migrations.AddField(
            model_name='pedagogicalquestions',
            name='questions',
            field=models.ManyToManyField(related_name='pedagogical_questions', to='videoclases.Question'),
        ),
        migrations.AddField(
            model_name='homework',
            name='scale',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    to='videoclases.Scale'),
        ),
        migrations.AddField(
            model_name='homework',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videoclases.Teacher'),
        ),
        migrations.AddField(
            model_name='groupofstudents',
            name='homework',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups',
                                    to='videoclases.Homework'),
        ),
        migrations.AddField(
            model_name='groupofstudents',
            name='students',
            field=models.ManyToManyField(to='videoclases.Student'),
        ),
        migrations.AddField(
            model_name='finalscores',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videoclases.GroupOfStudents'),
        ),
        migrations.AddField(
            model_name='finalscores',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videoclases.Student'),
        ),
        migrations.AddField(
            model_name='criteriabyteacher',
            name='criteria',
            field=models.ManyToManyField(to='videoclases.Criterion'),
        ),
        migrations.AddField(
            model_name='criteriabyteacher',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videoclases.Teacher'),
        ),
        migrations.AddField(
            model_name='course',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videoclases.School'),
        ),
        migrations.AlterUniqueTogether(
            name='groupofstudents',
            unique_together={('number', 'homework')},
        ),
        migrations.RunPython(load_fixture, reverse_code=unload_fixture),
    ]
